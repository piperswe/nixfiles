name: "Build"
on:
  pull_request:
  push:
jobs:
  flake:
    name: Check Flakes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: cachix/install-nix-action@v14
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: "--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve"
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            trusted-public-keys = nix-cache.piperswe.me:4r7vyJJ/0riN8ILB+YhSCnYeynvxOeZXNsPNV4Fn8mE= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
            substituters = https://cache.nixos.org s3://nix-cache.piperswe.me https://nix-community.cachix.org
      - name: Check flake
        run: nix -v --log-format raw flake check --impure --show-trace
        env:
          # nix flake check doesn't use the per-configuration nixpkgs settings
          NIXPKGS_ALLOW_UNFREE: 1

  # packages:
  #   needs: flake
  #   name: "Package: ${{ matrix.pkg }}"
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       pkg:
  #         - plexamp
  #   steps:
  #     - uses: actions/checkout@v2.3.4
  #     - uses: cachix/install-nix-action@v14
  #       with:
  #         install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
  #         install_options: "--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve"
  #         nix_path: nixpkgs=channel:nixos-unstable
  #         extra_nix_config: |
  #           experimental-features = nix-command flakes
  #           access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
  #           trusted-public-keys = nix-cache.piperswe.me:4r7vyJJ/0riN8ILB+YhSCnYeynvxOeZXNsPNV4Fn8mE= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
  #           substituters = https://cache.nixos.org s3://nix-cache.piperswe.me https://nix-community.cachix.org
  #     - name: Build ${{ matrix.pkg }}
  #       run: nix -v --log-format raw build --impure --show-trace '.#${{ matrix.pkg }}'
  #       env:
  #         # Some of these packages are non-free
  #         NIXPKGS_ALLOW_UNFREE: 1
  #     - name: Push to binary cache
  #       run: |
  #         echo "${{ secrets.CACHE_PRIV_KEY }}" > /tmp/cache-priv-key.pem
  #         nix store sign --key-file /tmp/cache-priv-key.pem ./result
  #         nix copy --to s3://nix-cache.piperswe.me ./result
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  nixosConfigurations:
    needs:
      - flake
      # - packages
    name: "NixOS: ${{ matrix.hostname }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hostname:
          - big-linux-box
          - hydra
          - nix-devbox
          - installer
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: cachix/install-nix-action@v14
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: "--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve"
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            trusted-public-keys = nix-cache.piperswe.me:4r7vyJJ/0riN8ILB+YhSCnYeynvxOeZXNsPNV4Fn8mE= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
            substituters = https://cache.nixos.org s3://nix-cache.piperswe.me https://nix-community.cachix.org
      - name: Build ${{ matrix.hostname }}
        run: nix -v --log-format raw build --show-trace '.#nixosConfigurations.${{ matrix.hostname }}.config.system.build.toplevel'
      - name: Push to binary cache
        run: |
          echo "${{ secrets.CACHE_PRIV_KEY }}" > /tmp/cache-priv-key.pem
          nix store sign --key-file /tmp/cache-priv-key.pem ./result
          nix copy --to s3://nix-cache.piperswe.me ./result
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  nixosConfigurations-iso:
    needs:
      - flake
      # - packages
      - nixosConfigurations
    name: "NixOS ISO: ${{ matrix.hostname }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hostname:
          - installer
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: cachix/install-nix-action@v14
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: "--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve"
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            trusted-public-keys = nix-cache.piperswe.me:4r7vyJJ/0riN8ILB+YhSCnYeynvxOeZXNsPNV4Fn8mE= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
            substituters = https://cache.nixos.org s3://nix-cache.piperswe.me https://nix-community.cachix.org
      - name: Build ${{ matrix.hostname }}
        run: nix -v --log-format raw build --show-trace '.#nixosConfigurations.${{ matrix.hostname }}.config.system.build.isoImage'
      - name: Push to binary cache
        run: |
          echo "${{ secrets.CACHE_PRIV_KEY }}" > /tmp/cache-priv-key.pem
          nix store sign --key-file /tmp/cache-priv-key.pem ./result
          nix copy --to s3://nix-cache.piperswe.me ./result
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
